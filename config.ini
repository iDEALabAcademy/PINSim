[HardwareConfig]
#Pixel array dimention
pixel_array_width = 32
pixel_array_height = 32
#ADCs for each channel
adc_number = 32

#percentage of computing time in compression to sensing
cp_percentage = 50

#box size
box_size = 3

# technology_size eg 32, 45, etc (nm)
technology_size = 45

pixel_model = 0
pixel_array_model = 1
main_system_model = 0
adc_model = 3
adc_array_model = 0
adc_cp_model = 0
pixel_cp_model = 0
#location of CP (1 means there is a cp)
cp_in_pixel = 1
cp_in_adc = 0
#usually equal to parallelism level (in adc this number is equal to 1)
cp_per_pixel = 2
cp_per_adc = 1
#parallelism level
parallelism_level = 2
#memory configuration
buffer_model = 0
global_model = 0
#weight precision (bit)
weight_precision = 8



[NetworkConfig]
#network type can be CNN or MLP
network_type = CNN
#network_type = MLP

#filter size
kernel_number = 64
kernel_width = 3
kernel_height = 3
stride = 1
padding = 0
#hedden node in first layer
hidden_node = 512


[Pixel]
power = 0.9, 5.48, 88.4
delay = 2, 31, 2.4
area = 4.07, 16, 10.24
# powers are in pW
#Latency are in us
#Area in mm^2
#Pixel 1 ref: An Energy/Illumination-Adaptive CMOS Image Sensor With Reconfigurable Modes of Operations --- (4T) numbers in 180nm : 15.4, 8, 31.36, pow array: 150 
#Pixel 2 ref: A 65 nm 0.5 V DPS CMOS Image Sensor With 17 pJ/Frame.Pixel and 42 dB Dynamic Range for Ultra-Low-Power SoCs ---- (5T) 65 nm
#Pixel 3 ref: A 467nW CMOS Visual Motion Sensor with Temporal Averaging and Pixel Aggregation  ---- (3T) numbers in 130nm: 340, 4, 40.96 pow array: 268 


[PixelArray]
power = 8.8, 49.3, 69.68
delay = 0, 0, 0
area = 4.07, 16, 10.24
# same units and references as pixel part are used


[Adc]
power = 0.146, 0.133, 0.116, 0.234, 2000, 0.059
delay = 2, 2, 2, 2, 0.83, 6
area = 0.212, 0.212, 0.212, 0.212, 0.01, 0.0175
#config: 8b,7b,6b,5b,4b,3b
# power in uW, delay in ns, area in mm^2
#refs: A resolution-reconfigurable 5-to-10b 0.4-to-1V power scalable SAR ADC , A Miniature 2 mW 4 bit 1.2 GS/s Delay-Line-Based ADC in 65 nm CMOS, Adaptive Resolution ADC Array for Neural Implant
# main data for 130 nm ADC,

[MainSystem]
power = 110, 120, 320, 110
delay = 100, 120, 140, 120
area = 100, 100.2, 100.3, 100.4

[AdcArray]
power = 0, 0, 0, 0, 0, 0
delay = 0, 0, 0, 0, 0, 0
area = 0, 0, 0, 0, 0, 0

[AdcComputeAddon]
power = 0, 0, 0, 0, 0, 0
delay = 0, 0, 0, 0, 0, 0
area = 0, 0, 0, 0, 0, 0

[PixelComputeAddon]
power = 0, 0, 0, 0,
delay = 0, 0, 0, 0
area = 0, 0, 0, 0

#sram, etc all per bit
[BufferCell]
read_power = 11, 12, 32, 11
write_power = 11, 12, 32, 11
read_delay = 11, 12, 32, 11
write_delay = 11, 12, 32, 11
shift = 11, 12, 32, 11
power = 0.236, 0.057, 0.22, 5.72 
delay = 0.015, 2, 4.62, 9.6
area = 18.84, 0.1265, 0.039, 0.71
# power: uW, delay: nS, area: um^2
# 1st is sram, Ref:  Design and evaluation of 6T SRAM layout designs at modern nanoscale CMOS processes---- 65nm
# 2nd is dram, Ref:  A 500 MHz Random Cycle, 1.5 ns Latency, SOI Embedded DRAM Macro Featuring a Three-Transistor Micro Sense Amplifier ---65nm
# 3rd is RRAM, Ref:  A 5ns Fast Write Multi-Level Non-Volatile 1 K bits RRAM Memory with Advance Write Scheme ---180nm 3.85, 18.5, 0.3
# 4rd is MRAM, Ref:  A 90nm 12ns 32Mb 2T1MTJ MRAM ---90nm *** Design and Optimization of Nonvolatile Multibit 1T1R Resistive RAM 90nm: 11, 12, 1.37

#mtj, etc all per bit
[GlobalCell]
read_power = 11, 12, 32, 11
write_power = 11, 12, 32, 11
read_delay = 11, 12, 32, 11
write_delay = 11, 12, 32, 11
power =0.236, 0.057, 0.22, 5.72
delay = 0.015, 2, 4.62, 9.6
area = 18.84, 0.1265, 0.039, 0.71
# same numbers as buffer cell

[Buffer]
#best value is kernel_size x weight precision
bus_size = 72
power = 0
delay = 0
area = 0

[Global]
#should be bigger than weight precision
bus_size = 72
power = 0
delay = 0
area = 0

[Decoder]
power = 110, 120, 320, 110
delay = 100, 120, 140, 120
area = 100, 100.2, 100.3, 100.4

[ControlUnit]
power = 110, 120, 320, 110
delay = 100, 120, 140, 120
area = 100, 100.2, 100.3, 100.4